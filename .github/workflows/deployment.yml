name: Accounts Module Deployment

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
    types: [closed]

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: ${{ github.ref_name }}

    steps:
      - name: Get Runner Public IP Address
        uses: candidob/get-runner-ip@v1.0.0
        id: ip

      - uses: actions/checkout@v4

      - name: Create remote directory if it doesn't exist
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            mkdir -p $HOME/mlm_demo/${{ github.event.repository.name }}

      - name: Archive code into zip
        run: |
          zip -r code.zip . -x "target/*"

      - name: Upload zip file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          source: "code.zip"
          target: "$HOME/mlm_demo/${{ github.event.repository.name }}/"

      - name: Deploy code on Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          command_timeout: 15m
          port: 22
          script: |
            cd $HOME/mlm_demo/${{ github.event.repository.name }}/
            shopt -s extglob
            rm -rf -- !(code.zip)
            unzip code.zip
            rm code.zip

      - name: Create .env file locally
        run: |
          mkdir -p ./temp_env/
          echo "DB_URL=${{ secrets.MLM_SERVICE_BASE_URL || vars.MLM_SERVICE_BASE_URL }}" >> ./temp_env/.env
          echo "DB_USERNAME=${{ secrets.MLM_SERVICE_API_KEY || vars.MLM_SERVICE_API_KEY }}" >> ./temp_env/.env
          echo "DB_PASSWORD=${{ secrets.MLM_SERVICE_API_SECRET || vars.MLM_SERVICE_API_SECRET }}" >> ./temp_env/.env
          echo "AUTH_URL=${{ secrets.AUTH_BASE_URL || vars.AUTH_BASE_URL }}" >> ./temp_env/.env
          echo "AUTH_USERNAME=${{ secrets.AUTH_API_KEY || vars.AUTH_API_KEY }}" >> ./temp_env/.env
          echo "AUTH_PASSWORD=${{ secrets.AUTH_API_SECRET || vars.AUTH_API_SECRET }}" >> ./temp_env/.env
          echo "SHORTENER_URL=${{ secrets.SHORTENER_BASE_URL || vars.SHORTENER_BASE_URL }}" >> ./temp_env/.env
          echo "SHORTENER_USERNAME=${{ secrets.SHORTENER_API_KEY || vars.SHORTENER_API_KEY }}" >> ./temp_env/.env
          echo "SHORTENER_PASSWORD=${{ secrets.SHORTENER_API_SECRET || vars.SHORTENER_API_SECRET }}" >> ./temp_env/.env
          echo "REDIS_URL=${{ secrets.REDIS_URL || vars.REDIS_URL }}" >> ./temp_env/.env

      - name: Upload .env file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          source: "./temp_env/.env"
          target: "$HOME/mlm_demo/${{ github.event.repository.name }}/app/configs/"
          
      - name: Clean up local temp_env directory
        run: rm -rf ./temp_env
  

      - name: Run Server
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_SERVER_IP || vars.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER || vars.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_KEY || vars.SSH_KEY }}
          command_timeout: 15m
          port: 22
          script_stop: true
          script: |
            cd $HOME/mlm_demo/${{ github.event.repository.name }}
            docker compose stop
            docker compose up -d --build --force-recreate
